from aiogram import Router, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from db.models import get_all_services, delete_service
from config import ADMIN_IDS

router = Router()


def generate_services_keyboard():
    """–ì–µ–Ω–µ—Ä—É—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ —É—Å—ñ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∏–º–∏ –ø–æ—Å–ª—É–≥–∞–º–∏."""
    services = get_all_services()
    if not services:
        return ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="–°–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π")]],
            resize_keyboard=True
        )
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=service['name'])] for service in services],
        resize_keyboard=True
    )


@router.message(F.text == "üì• –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É")
async def delete_service_start(message: types.Message):
    """–ù–∞–¥—Å–∏–ª–∞—î —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª—É–≥ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è."""
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞!!.")
        return

    keyboard = generate_services_keyboard()
    await message.answer("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É, —è–∫—É —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏:", reply_markup=keyboard)


@router.message(F.text.in_([service['name'] for service in get_all_services()]))
async def process_delete_service(message: types.Message):
    """–û–±—Ä–æ–±–ª—è—î –≤–∏–±—ñ—Ä –ø–æ—Å–ª—É–≥–∏ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è."""
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞!!.")
        return

    service_name = message.text.strip()  # –ù–∞–∑–≤–∞ –ø–æ—Å–ª—É–≥–∏, —è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏
    if delete_service(service_name):
        await message.answer(f"–ü–æ—Å–ª—É–≥—É '{service_name}' —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
    else:
        await message.answer(f"–ü–æ—Å–ª—É–≥—É '{service_name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ.", reply_markup=ReplyKeyboardRemove())

    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª—É–≥
    keyboard = generate_services_keyboard()
    await message.answer("–û–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª—É–≥:", reply_markup=keyboard)
